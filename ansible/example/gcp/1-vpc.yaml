# pip install requests google-auth
# ansible-playbook 1-vpc.yaml
---
- name: Manage VPC
  hosts: localhost
  gather_facts: no
  tasks:
    # https://docs.ansible.com/ansible/latest/collections/google/cloud/gcp_compute_network_module.html
    - name: Create Network
      google.cloud.gcp_compute_network:
        name: "{{ network_name }}"
        auto_create_subnetworks: false
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        routing_config:
          routing_mode: "REGIONAL"
        mtu: 1460
        state: present
      tags: 
        - vpc
      register: network

    # ansible-playbook 1-vpc.yaml --tags delete
    - name: Delete network
      google.cloud.gcp_compute_network:
        name: "{{ network_name }}"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        state: absent
      tags:
        - never
        - delete
    # https://docs.ansible.com/ansible/latest/collections/google/cloud/gcp_compute_global_address_module.html
    - name: Create Global IP address
      google.cloud.gcp_compute_global_address:
        name: "{{ address_name }}"
        project: "{{ project }}"
        address_type: "INTERNAL"
        network:
          selfLink: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/networks/{{ network_name }}
        prefix_length: 16
        purpose: "VPC_PEERING"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        state: present
      tags:
        - vpc-address
      register: address

    - name: Delete Global IP address
      google.cloud.gcp_compute_global_address:
        name: "{{ address_name }}"
        project: "{{ project }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        state: absent
      tags:
        - never
        - delete
    
    - name: Set gcloud project
      command: gcloud config set project "{{ project }}"
    - name: Create google_service_networking_connection
      command: gcloud services vpc-peerings connect --service=servicenetworking.googleapis.com --ranges="{{ range_name }}" --network="{{ network_name }}" --project="{{ project }}"
    
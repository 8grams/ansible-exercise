---
- name: Check if OpenSSL configuration exists
  stat:
    path: "{{ openssl_cnf_file }}"
  register: openssl_config
  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true

- name: Copy OpenSSL configuration
  template:
    src: openssl.cnf.j2
    dest: "{{ openssl_cnf_file }}"
  when: not openssl_config.stat.exists
  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true

- name: Check if OpenSSL Cert exists
  stat:
    path: "{{ boundary_cert_pem }}"
  register: boundary_cert_file
  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true

- name: Generate private key and certificate
  command:
    cmd: "{{ item }}"
  with_items:
    - openssl genrsa -out {{ boundary_key_pem }} 2048
    - openssl req -new -key {{ boundary_key_pem }} -out {{ boundary_csr }} -config {{ openssl_cnf_file }}
    - openssl x509 -req -in {{ boundary_csr }} -signkey {{ boundary_key_pem }} -out {{ boundary_cert_pem }} -days 365 -extensions req_ext -extfile {{ openssl_cnf_file }}

  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true
  when: not boundary_cert_file.stat.exists

- name: Fetch certificate from the node
  ansible.builtin.fetch:
    src: "{{ boundary_cert_pem }}"
    dest: "./certs/{{ inventory_hostname }}/boundary-cert.pem"
    flat: yes
  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true

- name: Fetch private key from the node
  ansible.builtin.fetch:
    src: "{{ boundary_key_pem }}"
    dest: "./certs/{{ inventory_hostname }}/boundary-key.pem"
    flat: yes
  delegate_to: "{{ groups['boundary_controller'][0] }}"
  run_once: true

- name: Ensure the destination directory exists on all nodes
  ansible.builtin.file:
    path: /etc/boundary.d/tls
    state: directory
    mode: '0755'
  loop: "{{ groups['boundary_node'] }}"


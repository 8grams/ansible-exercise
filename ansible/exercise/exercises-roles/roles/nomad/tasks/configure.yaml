---
- name: Create /opt/nomad directory
  ansible.builtin.file:
    path: /opt/nomad
    state: directory
    mode: '0755'

- name: Create nomad user
  ansible.builtin.user:
    name: nomad
    system: yes
    home: /etc/nomad.d
    shell: /bin/false

- name: Create Nomad config
  copy:
    src: ./files/nomad.service.server
    dest: /etc/systemd/system/nomad.service
  when: "'nomad_server' in group_names"

- name: Create Nomad config
  copy:
    src: ./files/nomad.service.client
    dest: /etc/systemd/system/nomad.service
  when: "'nomad_client' in group_names"

- name: Set common config
  ansible.builtin.file:
    path: /etc/nomad.d/ssl
    state: directory
    mode: '0700'

- name: Set datacenter
  template:
    src: ./files/nomad.hcl.j2
    dest: /etc/nomad.d/nomad.hcl

- name: Set node as server
  template:
    src: ./files/server.hcl.j2
    dest: /etc/nomad.d/server.hcl
  when: "'nomad_server' in group_names"

- name: Set node as client
  template:
    src: ./files/client.hcl.j2
    dest: /etc/nomad.d/client.hcl
  when: "'nomad_client' in group_names"

# Used by consul as well

- name: Check if OpenSSL configuration exists
  stat:
    path: /etc/nomad.d/ssl/openssl.cnf
  register: openssl_config

- name: Check if OpenSSL Cert exists
  stat:
    path: /etc/nomad.d/ssl/nomad-client.pem
  register: nomadclientpem

- name: Copy OpenSSL configuration
  template:
    src: ./files/openssl.cnf.j2
    dest: /etc/nomad.d/ssl/openssl.cnf
  when: not openssl_config.stat.exists

- name: Generate private key and certificate
  command:
    cmd: "{{ item }}"
  with_items:
    - openssl genpkey -algorithm RSA -out {{ ca_key_pem }}
    - openssl req -x509 -new -nodes -key {{ ca_key_pem }} -sha256 -days 3650 -out {{ ca_pem }} -subj "/CN={{ nomad_domain }}"
    - openssl genpkey -algorithm RSA -out {{ nomad_server_key_pem }}
    - openssl req -new -key {{ nomad_server_key_pem }} -out {{ nomad_server_csr }} -subj "/CN={{ ansible_default_ipv4.address }}"
    - openssl x509 -req -in {{ nomad_server_csr }} -CA {{ ca_pem }} -CAkey {{ ca_key_pem }} -CAcreateserial -out {{ nomad_server_pem }} -days 365 -extensions v3_req -extfile {{ openssl_cnf_file }}

    - openssl genpkey -algorithm RSA -out {{ nomad_client_key_pem }}
    - openssl req -new -key {{ nomad_client_key_pem }} -out {{ nomad_client_csr }} -subj "/CN=client"
    - openssl x509 -req -in {{ nomad_client_csr }} -CA {{ ca_pem }} -CAkey {{ ca_key_pem }} -CAcreateserial -out {{ nomad_client_pem }} -days 365
  delegate_to: "{{ groups['nomad_server'][0] }}"
  run_once: true
  when: not nomadclientpem.stat.exists

- name: Check if cert already exists in client
  stat:
    path: /etc/nomad.d/ssl/nomad-client.pem
  register: nomadclientpemclient

- name: Fetch certificates from nomad_server
  fetch:
    src: "{{ item }}"
    dest: "/tmp/nomad/{{ item }}"
    flat: yes
  with_items:
    - "{{ ca_key_pem }}"
    - "{{ ca_pem }}"
    - "{{ nomad_server_key_pem }}"
    - "{{ nomad_server_csr }}"
    - "{{ nomad_server_pem }}"
    - "{{ nomad_client_key_pem }}"
    - "{{ nomad_client_csr }}"
    - "{{ nomad_client_pem }}"
  delegate_to: "{{ groups['nomad_server'][0] }}"
  run_once: true
  when: not nomadclientpemclient.stat.exists

- name: Copy certificates to all hosts
  copy:
    src: "/tmp/nomad/{{ item }}"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "{{ ca_key_pem }}"
    - "{{ ca_pem }}"
    - "{{ nomad_server_key_pem }}"
    - "{{ nomad_server_csr }}"
    - "{{ nomad_server_pem }}"
    - "{{ nomad_client_key_pem }}"
    - "{{ nomad_client_csr }}"
    - "{{ nomad_client_pem }}"
  when:
    - not nomadclientpemclient.stat.exists
